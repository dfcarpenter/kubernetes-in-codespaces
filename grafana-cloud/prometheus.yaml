apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch

- nonResourceURLs:
  - /metrics
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus

roleRef:
  name: prometheus
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole

subjects:
- kind: ServiceAccount
  name: default
  namespace: monitoring

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: |-
    groups:
    - name: devopscube demo alert
      rules:
      - alert: High Pod Memory
        expr: sum(container_memory_usage_bytes) > 1
        for: 1m
        labels:
          severity: slack
        annotations:
          summary: High Memory Usage
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    remote_write:
    - url: $GC_PROM_URL
      basic_auth:
        username: $GC_PROM_USER
        password: eyJrIjoiN2U3YzRjYWVkNDU1MWEwOWM1OGRmZjUyNjRmNjAwNTk4YzJiNjNkNiIsIm4iOiJiYXJ0ci1wdWJsaXNoZXIiLCJpZCI6NTU4MzY3fQ==
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:
      - job_name: 'ngsa-memory'
        static_configs:
          - targets: [ 'ngsa-memory.default.svc.cluster.local:8080' ]

      - job_name: 'ngsa-cosmos'
        static_configs:
          - targets: [ 'ngsa-cosmos.default.svc.cluster.local:8080' ]

      - job_name: 'webv'
        static_configs:
          - targets: [ 'webv.default.svc.cluster.local:8080' ]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.29.1
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests: 
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          hostPath:
            path: /prometheus

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
  
spec:
  selector: 
    app: prometheus-server
  type: NodePort  
  ports:
    - port: 8080
      targetPort: 9090 
      nodePort: 30000
